---
import McButton from "./McButton.astro";

interface Edition {
  name: string;
  date: string;
  version: string;
  file: string;
}

const MC_FILES_CDN = import.meta.env.MC_FILES_CDN;

const editions: Edition[] = [
  { name: "1", date: "05.09.2021", version: "1.17", file: "zalanyServE1.tar.xz" },
  { name: "2", date: "26.02.2022", version: "1.18.1", file: "zalanyServE2.tar.xz" },
  { name: "3", date: "09.08.2022", version: "1.19", file: "zalanyServE3.tar.xz" },
  { name: "4", date: "14.02.2023", version: "1.18.2", file: "zalanyServE4.tar.xz" },
  { name: "5", date: "19.01.2025", version: "1.21.3", file: "zalanyServE5.tar.xz" },
] as const;
---

<div class="download" id="mc-download">
  <div class="choice">
    <span>Edycje:</span>
    <div id="download-buttons">
      {editions.map((e) => <McButton>{e.name}</McButton>)}
    </div>
  </div>
  {
    editions.map((e, i) => (
      <div class={i === 0 ? "edition show" : "edition"}>
        <div class="data">
          <span>Edycja {e.name}</span>
          <span>{e.date}</span>
          <span>{e.version}</span>
        </div>
        <McButton href={`${MC_FILES_CDN}${MC_FILES_CDN.endsWith("/") ? "" : "/"}${e.file}`}>
          Pobierz
        </McButton>
      </div>
    ))
  }
</div>

<script>
  const buttons = document.querySelectorAll(
    "#download-buttons button",
  )! as NodeListOf<HTMLButtonElement>;
  const editions = document.querySelectorAll(
    "#mc-download .edition",
  )! as NodeListOf<HTMLDivElement>;

  buttons.forEach((btn, i) => {
    btn.addEventListener("click", () => {
      editions.forEach((edition) => edition.classList.remove("show"));
      editions[i].classList.add("show");
    });
  });
</script>

<style>
  .download {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: space-evenly;
  }
  .edition,
  .choice {
    min-width: 80%;
    border: min(0.4vw, 8px) solid #0006;
    padding: min(1vw, 20px) 0;
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: min(1vw, 20px);
  }
  .edition.show {
    display: flex;
  }
  .choice {
    display: flex;
    min-width: 60%;
    flex-direction: row;
  }
  .choice div {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    gap: min(1vw, 20px);
  }
  .data {
    min-width: 90%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
  }
  .data span {
    display: block;
    min-width: 30%;
    text-align: center;
    border-left: min(0.4vw, 8px) solid #0006;
    border-right: min(0.4vw, 8px) solid #0006;
    font-size: min(2.4vw, 48px);
  }
  .data span:nth-child(2) {
    border: none;
  }

  @media (max-width: 500px) {
    .data{
      width: 100%;
      gap: 3vw;
    }
    .data span {
      font-size: 4vw;
    }
  }
</style>
