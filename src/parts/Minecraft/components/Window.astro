---
interface Props {
  id: string;
  name: string;
  backHref?: `#${string}`;
}

const { id, name, backHref } = Astro.props;
---

<div class="window" id={id}>
  <div class="subname">
    <div aria-hidden="true"></div>
    <span>{name.toUpperCase()}</span>
    {backHref ? (
      <a class="back" href={backHref}>&lt;&lt;</a>
    ) : (
      <div aria-hidden="true"></div>
    )}
  </div>
  <div class="subcontent">
    <slot />
  </div>
</div>

<style>
  .window {
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    overflow-y: scroll;
    display: inline-grid;
    grid-template-columns: 1fr 10fr;
    scroll-snap-align: start;
    justify-content: center;
    align-items: center;
  }
  .subname {
    writing-mode: vertical-lr;
    text-orientation: upright;
    font-family: "Minecraft";
    font-size: min(3.4vw, 68px);
    display: flex;
    height: 100%;
    justify-content: space-between;
    align-items: center;
    background: #45331e url("../files/Stripped-Dark-Oak.jpg");
    background-size: 100%;
    padding-top: min(1vw, 20px);
    padding-bottom: min(1vw, 20px);
  }
  .subcontent {
    width: 100%;
    height: 100%;
    background: url("../files/glass-black.svg");
    background-size: 6vw;
    border: min(0.4vw, 8px) solid #0006;
    font-family: "Source Code Pro";
    font-size: min(2.6vw, 52px);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    white-space: normal;
    flex-direction: column;
    gap: min(1vw, 20px);
  }
  .back {
    margin-top: min(2vw, 40px);
    writing-mode: lr;
    text-decoration: none;
    color: #fff;
    font-family: "Minecraft";
    user-select: none;
    transition: transform 0.15s ease-in-out;
  }
  .back:hover {
    transform: translateX(max(-0.6vw, -12px));
  }
</style>
